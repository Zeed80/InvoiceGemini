#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è TrOCR –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ InvoiceGemini
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def demo_trocr():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã TrOCR"""
    print("üöÄ ============ DEMO: TrOCR –≤ InvoiceGemini ============")
    print("")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º TrOCR Processor
        from app.trocr_processor import TrOCRProcessor
        
        print("‚úÖ TrOCR Processor —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        print("")
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
        print("üì± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TrOCR...")
        processor = TrOCRProcessor(model_name="microsoft/trocr-base-printed")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏
        info = processor.get_model_info()
        print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ TrOCR:")
        print(f"   ‚Ä¢ –ú–æ–¥–µ–ª—å: {info['model_name']}")
        print(f"   ‚Ä¢ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {info['device']}")
        print(f"   ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏: {len(info['available_models'])}")
        print("")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
        print("ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ TrOCR –º–æ–¥–µ–ª–∏:")
        for i, model in enumerate(info['available_models'], 1):
            print(f"   {i}. {model}")
        print("")
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
        print("üí° –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ TrOCR –≤ InvoiceGemini:")
        print("   ‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        print("   ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–µ—á–∞—Ç–Ω–æ–≥–æ –∏ —Ä—É–∫–æ–ø–∏—Å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞") 
        print("   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–ª–µ–π —Å—á–µ—Ç–æ–≤")
        print("   ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        print("   ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏ –ø–∞–º—è—Ç–∏ (LoRA, 8-bit)")
        print("   ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ RTX 4070 Ti")
        print("")
        
        print("üéØ TrOCR —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ Donut!")
        print("   –¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:")
        print("   ‚Ä¢ Donut: OCR-free –ø–æ–Ω–∏–º–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        print("   ‚Ä¢ TrOCR: –í—ã—Å–æ–∫–æ—Ç–æ—á–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞")
        print("")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç TrOCR Trainer
        try:
            from app.training.trocr_trainer import TrOCRTrainer
            print("‚úÖ TrOCR Trainer —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
            print("   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç LoRA (–¥–æ 90% —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏)")
            print("   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç 8-bit –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä")
            print("   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Gradient Checkpointing")
            print("   ‚Ä¢ –ì–æ—Ç–æ–≤ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –Ω–∞ RTX 4070 Ti")
            print("")
        except ImportError as e:
            print(f"‚ö†Ô∏è TrOCR Trainer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
            print("")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ UI
        try:
            from app.training_dialog import ModernTrainingDialog
            print("‚úÖ TrOCR UI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞")
            print("   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ 'üì± TrOCR' –≤ –¥–∏–∞–ª–æ–≥ –æ–±—É—á–µ–Ω–∏—è")
            print("   ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—É—á–µ–Ω–∏—è TrOCR")
            print("   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏")
            print("   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ GPU –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è")
            print("")
        except Exception as e:
            print(f"‚ö†Ô∏è TrOCR UI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: {e}")
            print("")
        
        print("üéâ ========== TrOCR –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï ==========")
        print("")
        print("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ InvoiceGemini")
        print("   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' ‚Üí '–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π'")
        print("   3. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∫–ª–∞–¥–∫—É 'üì± TrOCR'")
        print("   4. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –¥–∞—Ç–∞—Å–µ—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π")
        print("   5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—É—á–µ–Ω–∏—è")
        print("   6. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏ –ø–∞–º—è—Ç–∏")
        print("")
        print("üöÄ TrOCR + Donut = –ú–æ—â–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏!")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("")
        print("üì¶ –î–ª—è —Ä–∞–±–æ—Ç—ã TrOCR –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        print("   pip install transformers torch pillow")
        print("")
        if 'transformers' in str(e):
            print("   pip install transformers")
        if 'torch' in str(e):
            print("   pip install torch")
        if 'PIL' in str(e):
            print("   pip install pillow")
            
    except Exception as e:
        print(f"‚ö†Ô∏è –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

def show_integration_summary():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–¥–∫—É –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ TrOCR"""
    print("")
    print("üìä ============ –°–í–û–î–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò TrOCR ============")
    print("")
    print("‚úÖ –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:")
    print("   1. üì± TrOCR Processor (app/trocr_processor.py)")
    print("      ‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å TrOCR")
    print("      ‚Ä¢ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print("      ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–ª–µ–π —Å—á–µ—Ç–æ–≤")
    print("")
    print("   2. üéì TrOCR Trainer (app/training/trocr_trainer.py)")
    print("      ‚Ä¢ –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–±—É—á–µ–Ω–∏—è TrOCR")
    print("      ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π –ø–∞–º—è—Ç–∏")
    print("      ‚Ä¢ LoRA, 8-bit optimizer, gradient checkpointing")
    print("      ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ RTX 4070 Ti (12GB VRAM)")
    print("")
    print("   3. üñ•Ô∏è TrOCR UI (app/training_dialog.py)")
    print("      ‚Ä¢ –ù–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞ 'üì± TrOCR' –≤ –¥–∏–∞–ª–æ–≥–µ –æ–±—É—á–µ–Ω–∏—è")
    print("      ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–µ–π Microsoft TrOCR")
    print("      ‚Ä¢ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—É—á–µ–Ω–∏—è –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏")
    print("      ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è")
    print("")
    print("üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–∏—Å—Ç–µ–º–æ–π:")
    print("   ‚Ä¢ TrOCR —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ Donut")
    print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç—É –∂–µ —Å–∏—Å—Ç–µ–º—É –¥–∞—Ç–∞—Å–µ—Ç–æ–≤")
    print("   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ ModelManager")
    print("   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏")
    print("")
    print("üéØ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ TrOCR:")
    print("   ‚Ä¢ –í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞")
    print("   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–µ—á–∞—Ç–Ω–æ–≥–æ –∏ —Ä—É–∫–æ–ø–∏—Å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞")
    print("   ‚Ä¢ –ë—ã—Å—Ç—Ä–æ–µ –æ–±—É—á–µ–Ω–∏–µ (3-5 —ç–ø–æ—Ö)")
    print("   ‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ GPU")
    print("   ‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏")
    print("")
    print("üöÄ TrOCR –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    demo_trocr()
    show_integration_summary() 