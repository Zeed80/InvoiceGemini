#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
—Å –≥–∞–ª–æ—á–∫–∞–º–∏ OCR –∏ –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—è PDF.
"""

import sys
import os
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'app'))

from PyQt6.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QWidget, QPushButton, QLabel, QHBoxLayout
from PyQt6.QtCore import QTimer

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
from app.ui.components.file_list_widget import FileListWidget, ProcessingStatus, FileProcessingInfo


class TestWindow(QMainWindow):
    """–¢–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ FileListWidget."""
    
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–¢–µ—Å—Ç –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –≥–∞–ª–æ—á–∫–∞–º–∏ OCR")
        self.setGeometry(100, 100, 900, 600)
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        layout = QHBoxLayout(central_widget)  # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π layout –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        
        # –õ–µ–≤–∞—è —á–∞—Å—Ç—å - —Ñ–∞–π–ª–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ (–∫–∞–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏)
        left_widget = QWidget()
        left_widget.setMaximumWidth(350)  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–∞–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        left_layout = QVBoxLayout(left_widget)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –≥–∞–ª–æ—á–∫–∞–º–∏ OCR")
        title.setStyleSheet("font-size: 14px; font-weight: bold; padding: 10px;")
        left_layout.addWidget(title)
        
        # –§–∞–π–ª–æ–≤—ã–π —Å–ø–∏—Å–æ–∫
        self.file_list = FileListWidget()
        self.file_list.file_selected.connect(self.on_file_selected)
        self.file_list.process_file_requested.connect(self.on_process_file)
        self.file_list.process_all_requested.connect(self.on_process_all)
        self.file_list.filename_clicked.connect(self.on_filename_clicked)  # –ù–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª
        left_layout.addWidget(self.file_list)
        
        layout.addWidget(left_widget)
        
        # –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –∫–Ω–æ–ø–∫–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        right_widget = QWidget()
        right_layout = QVBoxLayout(right_widget)
        
        info_title = QLabel("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏")
        info_title.setStyleSheet("font-size: 14px; font-weight: bold; padding: 10px;")
        right_layout.addWidget(info_title)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
        info_text = QLabel("""
<b>–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
<ul>
<li>üî≤ <b>–ì–∞–ª–æ—á–∫–∏ OCR</b> - –∫–æ–º–ø–∞–∫—Ç–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ OCR</li>
<li>üìÑ <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ PDF</b> - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—è</li>
<li>üìê <b>–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω</b> - —É–º–µ–Ω—å—à–µ–Ω–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã –∏ —Ä–∞–∑–º–µ—Ä—ã</li>
<li>üéØ <b>–ú–µ–Ω—å—à–µ –º–µ—Å—Ç–∞</b> - –ª–µ–≤–∞—è –ø–∞–Ω–µ–ª—å —Ç–µ–ø–µ—Ä—å –∑–∞–π–º–µ—Ç –º–µ–Ω—å—à–µ –º–µ—Å—Ç–∞</li>
<li>üîó <b>–ö–ª–∏–∫ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞</b> - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ!</li>
</ul>

<b>–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –≥–∞–ª–æ—á–µ–∫:</b>
<ul>
<li>üü† <b>–û—Ä–∞–Ω–∂–µ–≤–∞—è</b> - OCR —Ç—Ä–µ–±—É–µ—Ç—Å—è (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, PDF –±–µ–∑ —Ç–µ–∫—Å—Ç–∞)</li>
<li>üü¢ <b>–ó–µ–ª–µ–Ω–∞—è</b> - OCR –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è (PDF —Å —Ç–µ–∫—Å—Ç–æ–º)</li>
</ul>

<b>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b>
<ul>
<li>üìñ <b>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∏–º—è —Ñ–∞–π–ª–∞</b> - –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</li>
<li>üìä <b>–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤</b> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∞–± —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏</li>
<li>üîó <b>–ö–Ω–æ–ø–∫–∏ –≤ –¥–∏–∞–ª–æ–≥–µ</b> - –æ—Ç–∫—Ä—ã—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ, –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø—É—Ç—å</li>
</ul>

<b>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:</b>
<br>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.
        """)
        info_text.setWordWrap(True)
        info_text.setStyleSheet("padding: 10px; background-color: #f5f5f5; border-radius: 5px;")
        right_layout.addWidget(info_text)
        
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        self.add_demo_files_btn = QPushButton("üìÅ –î–æ–±–∞–≤–∏—Ç—å –¥–µ–º–æ-—Ñ–∞–π–ª—ã")
        self.add_demo_files_btn.clicked.connect(self.add_demo_files)
        right_layout.addWidget(self.add_demo_files_btn)
        
        self.add_pdf_files_btn = QPushButton("üìÑ –î–æ–±–∞–≤–∏—Ç—å PDF —Ñ–∞–π–ª—ã")
        self.add_pdf_files_btn.clicked.connect(self.add_pdf_files)
        right_layout.addWidget(self.add_pdf_files_btn)
        
        self.simulate_processing_btn = QPushButton("‚ö° –°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Å–µ—Ö")
        self.simulate_processing_btn.clicked.connect(self.simulate_all_processing)
        right_layout.addWidget(self.simulate_processing_btn)
        
        self.clear_files_btn = QPushButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫")
        self.clear_files_btn.clicked.connect(self.file_list.clear_files)
        right_layout.addWidget(self.clear_files_btn)
        
        right_layout.addStretch()
        
        # –°—Ç–∞—Ç—É—Å
        self.status_label = QLabel("–ì–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
        self.status_label.setStyleSheet("padding: 5px; background-color: #e3f2fd; border-radius: 3px;")
        right_layout.addWidget(self.status_label)
        
        layout.addWidget(right_widget)
        
        # –î–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        self.processing_timer = QTimer()
        self.processing_timer.timeout.connect(self.update_processing)
        self.current_processing_file = None
        self.processing_progress = 0
        
    def add_demo_files(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤."""
        demo_files = [
            "demo_images/invoice_001.png",      # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - OCR —Ç—Ä–µ–±—É–µ—Ç—Å—è
            "demo_images/document_001.png",     # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - OCR —Ç—Ä–µ–±—É–µ—Ç—Å—è  
            "demo_images/receipt_001.jpg",      # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - OCR —Ç—Ä–µ–±—É–µ—Ç—Å—è
            "sample_invoice.pdf",               # PDF - –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–ª–æ–π
            "report_2025.pdf",                  # PDF - –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–ª–æ–π
            "scanned_contract.pdf"              # PDF - –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–ª–æ–π
        ]
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        full_paths = []
        for file in demo_files:
            full_path = os.path.join(os.getcwd(), file)
            full_paths.append(full_path)
        
        self.file_list.set_files(full_paths)
        self.status_label.setText(f"–î–æ–±–∞–≤–ª–µ–Ω–æ {len(full_paths)} –¥–µ–º–æ-—Ñ–∞–π–ª–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–∞–ª–æ—á–∫–∏ OCR!")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
        if full_paths:
            # –û–¥–∏–Ω —Ñ–∞–π–ª —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
            self.file_list.update_file_progress(full_paths[0], 100, ProcessingStatus.COMPLETED)
            self.file_list.update_file_fields(full_paths[0], 9, 10)
            
            # –û–¥–∏–Ω —Ñ–∞–π–ª —Å –æ—à–∏–±–∫–æ–π
            if len(full_paths) > 1:
                self.file_list.set_file_error(full_paths[1], "–§–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω")
                
    def add_pdf_files(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ PDF —Ñ–∞–π–ª—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—è."""
        pdf_files = [
            "text_document.pdf",        # PDF —Å —Ç–µ–∫—Å—Ç–æ–º - OCR –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
            "scanned_invoice.pdf",      # –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π PDF - OCR —Ç—Ä–µ–±—É–µ—Ç—Å—è  
            "mixed_content.pdf",        # –°–º–µ—à–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
            "forms_document.pdf"        # –§–æ—Ä–º—ã PDF
        ]
        
        full_paths = []
        for file in pdf_files:
            full_path = os.path.join(os.getcwd(), file)
            full_paths.append(full_path)
        
        self.file_list.set_files(full_paths)
        self.status_label.setText(f"–î–æ–±–∞–≤–ª–µ–Ω–æ {len(full_paths)} PDF —Ñ–∞–π–ª–æ–≤. –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–ª–æ–π!")
        
    def on_file_selected(self, file_path: str):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞."""
        filename = os.path.basename(file_path)
        self.status_label.setText(f"–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {filename}")
        
    def on_process_file(self, file_path: str):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞."""
        filename = os.path.basename(file_path)
        self.status_label.setText(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {filename}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏
        self.current_processing_file = file_path
        self.processing_progress = 0
        self.file_list.update_file_progress(file_path, 0, ProcessingStatus.PROCESSING)
        self.processing_timer.start(80)  # –ë—ã—Å—Ç—Ä–µ–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        
    def on_process_all(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤."""
        unprocessed = self.file_list.get_unprocessed_files()
        if unprocessed:
            self.status_label.setText(f"–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É {len(unprocessed)} —Ñ–∞–π–ª–æ–≤...")
            self.simulate_all_processing()
        else:
            self.status_label.setText("–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            
    def on_filename_clicked(self, file_path: str, processing_data: dict):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞."""
        try:
            from app.ui.components.file_viewer_dialog import FileViewerDialog
            
            # –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∞–π–ª–∞
            viewer_dialog = FileViewerDialog(file_path, processing_data, self)
            viewer_dialog.exec()
            
        except Exception as e:
            self.status_label.setText(f"–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞: {str(e)}")
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞: {e}")
            
    def simulate_all_processing(self):
        """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Å–µ—Ö –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤."""
        unprocessed_files = self.file_list.get_unprocessed_files()
        
        if not unprocessed_files:
            self.status_label.setText("–í—Å–µ —Ñ–∞–π–ª—ã —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")
            return
            
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        for i, file_path in enumerate(unprocessed_files):
            QTimer.singleShot(i * 1500, lambda fp=file_path: self.simulate_file_processing(fp))
            
    def simulate_file_processing(self, file_path: str):
        """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞."""
        filename = os.path.basename(file_path)
        self.status_label.setText(f"–°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {filename}")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        self.file_list.update_file_progress(file_path, 0, ProcessingStatus.PROCESSING)
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
        def update_progress(progress):
            self.file_list.update_file_progress(file_path, progress, ProcessingStatus.PROCESSING)
            if progress >= 100:
                # –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
                import random
                recognized_fields = random.randint(6, 12)
                total_fields = 12
                
                self.file_list.update_file_progress(file_path, 100, ProcessingStatus.COMPLETED)
                self.file_list.update_file_fields(file_path, recognized_fields, total_fields)
                
                accuracy = (recognized_fields / total_fields) * 100
                self.status_label.setText(f"–ó–∞–≤–µ—Ä—à–µ–Ω–æ: {filename} ({accuracy:.1f}% —Ç–æ—á–Ω–æ—Å—Ç—å)")
            else:
                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                QTimer.singleShot(40, lambda: update_progress(progress + 8))
                
        # –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        update_progress(8)
        
    def update_processing(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å —Ç–µ–∫—É—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏."""
        if self.current_processing_file:
            self.processing_progress += 6
            
            if self.processing_progress >= 100:
                # –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
                self.processing_timer.stop()
                
                # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
                import random
                recognized_fields = random.randint(7, 10)
                total_fields = 10
                
                self.file_list.update_file_progress(
                    self.current_processing_file, 100, ProcessingStatus.COMPLETED
                )
                self.file_list.update_file_fields(
                    self.current_processing_file, recognized_fields, total_fields
                )
                
                filename = os.path.basename(self.current_processing_file)
                accuracy = (recognized_fields / total_fields) * 100
                self.status_label.setText(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {filename} ({accuracy:.1f}% —Ç–æ—á–Ω–æ—Å—Ç—å)")
                
                self.current_processing_file = None
                self.processing_progress = 0
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                self.file_list.update_file_progress(
                    self.current_processing_file, self.processing_progress, ProcessingStatus.PROCESSING
                )


def main():
    """–ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏."""
    app = QApplication(sys.argv)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app.setStyle('Fusion')
    
    # –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ
    window = TestWindow()
    window.show()
    
    print("="*70)
    print("–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ö–û–ú–ü–ê–ö–¢–ù–û–ì–û –§–ê–ô–õ–û–í–û–ì–û –ò–ù–¢–ï–†–§–ï–ô–°–ê –° –ì–ê–õ–û–ß–ö–ê–ú–ò OCR")
    print("="*70)
    print("üéØ –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:")
    print("‚Ä¢ ‚úÖ –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –≥–∞–ª–æ—á–∫–∏ OCR –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞")
    print("‚Ä¢ üîç –†–µ–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—è –≤ PDF —Ñ–∞–π–ª–∞—Ö")
    print("‚Ä¢ üìê –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    print("‚Ä¢ üé® –¶–≤–µ—Ç–æ–≤—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã: üü† OCR –Ω—É–∂–µ–Ω, üü¢ OCR –Ω–µ –Ω—É–∂–µ–Ω")
    print("‚Ä¢ üìè –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –ª–µ–≤–∞—è –ø–∞–Ω–µ–ª—å (300-350px —à–∏—Ä–∏–Ω–∞)")
    print("‚Ä¢ üîó –ö–ª–∏–∫ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
    print("")
    print("üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:")
    print("‚Ä¢ üìÅ '–î–æ–±–∞–≤–∏—Ç—å –¥–µ–º–æ-—Ñ–∞–π–ª—ã' - –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å–º–µ—à–∞–Ω–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤")
    print("‚Ä¢ üìÑ '–î–æ–±–∞–≤–∏—Ç—å PDF —Ñ–∞–π–ª—ã' - –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—è")
    print("‚Ä¢ ‚ö° '–°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Å–µ—Ö' - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤")
    print("‚Ä¢ üóëÔ∏è '–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫' - —É–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ñ–∞–π–ª—ã")
    print("‚Ä¢ üìñ –ö–ª–∏–∫ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
    print("")
    print("üîç –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:")
    print("‚Ä¢ –ì–∞–ª–æ—á–∫–∏ OCR –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Å—Ç–∞—Ç—É—Å –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ —Ç–µ–∫—Å—Ç–∞")
    print("‚Ä¢ PDF —Ñ–∞–π–ª—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—è")
    print("‚Ä¢ –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω —ç–∫–æ–Ω–æ–º–∏—Ç –º–µ—Å—Ç–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ")
    print("‚Ä¢ –ö–ª–∏–∫ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º")
    print("‚Ä¢ –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∞–± —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    print("‚Ä¢ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    print("="*70)
    
    sys.exit(app.exec())


if __name__ == "__main__":
    main() 