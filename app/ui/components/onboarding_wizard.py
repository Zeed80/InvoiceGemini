"""
–ú–∞—Å—Ç–µ—Ä –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ InvoiceGemini
–ü–æ–º–æ–≥–∞–µ—Ç –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
"""
import os
from pathlib import Path
from PyQt6.QtWidgets import (
    QWizard, QWizardPage, QVBoxLayout, QHBoxLayout, QLabel,
    QPushButton, QRadioButton, QCheckBox, QLineEdit, QTextEdit,
    QGroupBox, QButtonGroup, QProgressBar, QWidget, QComboBox,
    QFrame, QSpacerItem, QSizePolicy
)
from PyQt6.QtCore import Qt, pyqtSignal, QTimer, QSize
from PyQt6.QtGui import QFont, QPixmap, QMovie

from ...settings_manager import settings_manager
from ... import config as app_config


class OnboardingWizard(QWizard):
    """–ú–∞—Å—Ç–µ—Ä –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å –ø–æ—à–∞–≥–æ–≤–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π"""
    
    setup_completed = pyqtSignal(dict)  # Emits configuration chosen by user
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ InvoiceGemini!")
        self.setMinimumSize(900, 700)
        self.resize(1000, 750)
        
        # –°—Ç–∏–ª—å
        self.setWizardStyle(QWizard.WizardStyle.ModernStyle)
        self.setOption(QWizard.WizardOption.NoBackButtonOnStartPage, True)
        self.setOption(QWizard.WizardOption.HaveHelpButton, False)
        
        # –°—Ç—Ä–∞–Ω–∏—Ü—ã
        self.addPage(WelcomePage(self))
        self.addPage(WorkspaceSelectionPage(self))
        self.addPage(ModelSetupPage(self))
        self.addPage(APIKeysPage(self))
        self.addPage(CompletionPage(self))
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª—å
        self.setStyleSheet(self._get_stylesheet())
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
        self.finished.connect(self._on_finished)
    
    def _on_finished(self, result):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞"""
        if result == QWizard.DialogCode.Accepted:
            # –°–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            config = {
                'workspace_mode': self.field('workspace_mode'),
                'model_preference': self.field('model_preference'),
                'gpu_enabled': self.field('gpu_enabled'),
                'gemini_key_set': self.field('gemini_key_set'),
                'first_run_completed': True
            }
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            settings_manager.set_value('General', 'first_run_completed', True)
            settings_manager.set_value('General', 'workspace_mode', config['workspace_mode'])
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª
            self.setup_completed.emit(config)
    
    def _get_stylesheet(self):
        """–°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Ç–µ—Ä–∞"""
        return """
            QWizard {
                background-color: #f8f9fa;
            }
            
            QWizardPage {
                background-color: white;
            }
            
            QLabel#title {
                font-size: 24px;
                font-weight: bold;
                color: #2c3e50;
                padding: 10px 0;
            }
            
            QLabel#subtitle {
                font-size: 14px;
                color: #7f8c8d;
                padding-bottom: 20px;
            }
            
            QLabel#description {
                font-size: 12px;
                color: #5a6c7d;
                line-height: 1.6;
            }
            
            QGroupBox {
                font-size: 13px;
                font-weight: 600;
                border: 2px solid #e0e0e0;
                border-radius: 8px;
                margin-top: 10px;
                padding-top: 15px;
            }
            
            QGroupBox::title {
                subcontrol-origin: margin;
                subcontrol-position: top left;
                padding: 0 10px;
                color: #2c3e50;
            }
            
            QRadioButton, QCheckBox {
                font-size: 12px;
                padding: 8px;
            }
            
            QRadioButton::indicator, QCheckBox::indicator {
                width: 18px;
                height: 18px;
            }
            
            QRadioButton:hover, QCheckBox:hover {
                background-color: #f0f3f5;
                border-radius: 4px;
            }
            
            QPushButton {
                background-color: #3498db;
                color: white;
                border: none;
                border-radius: 6px;
                padding: 10px 20px;
                font-size: 13px;
                font-weight: 600;
            }
            
            QPushButton:hover {
                background-color: #2980b9;
            }
            
            QPushButton:pressed {
                background-color: #1c5985;
            }
        """


class WelcomePage(QWizardPage):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setTitle("")  # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        
        layout = QVBoxLayout(self)
        layout.setSpacing(20)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É
        layout.addSpacing(30)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å emoji
        title = QLabel("üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ InvoiceGemini!")
        title.setObjectName("title")
        title.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(title)
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle = QLabel("–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—á–µ—Ç–æ–≤-—Ñ–∞–∫—Ç—É—Ä —Å –ø–æ–º–æ—â—å—é AI")
        subtitle.setObjectName("subtitle")
        subtitle.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(subtitle)
        
        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        line = QFrame()
        line.setFrameShape(QFrame.Shape.HLine)
        line.setStyleSheet("background-color: #e0e0e0;")
        layout.addWidget(line)
        
        layout.addSpacing(10)
        
        # –û—Å–Ω–æ–≤–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        description = QLabel(
            "–≠—Ç–æ—Ç –º–∞—Å—Ç–µ—Ä –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:\n\n"
            "  ‚úì  –í—ã–±—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã\n"
            "  ‚úì  –ù–∞—Å—Ç—Ä–æ–∏—Ç—å AI-–º–æ–¥–µ–ª–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏\n"
            "  ‚úì  –ü–æ–¥–∫–ª—é—á–∏—Ç—å –æ–±–ª–∞—á–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)\n"
            "  ‚úì  –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç\n\n"
            "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ 2-3 –º–∏–Ω—É—Ç—ã."
        )
        description.setObjectName("description")
        description.setWordWrap(True)
        description.setAlignment(Qt.AlignmentFlag.AlignLeft)
        layout.addWidget(description)
        
        layout.addSpacing(20)
        
        # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        features_group = QGroupBox("üåü –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")
        features_layout = QVBoxLayout()
        
        features = [
            "ü§ñ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ AI-–º–æ–¥–µ–ª–∏: LayoutLMv3, Donut, Google Gemini",
            "‚ö° –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞: –æ—Ç 3 —Å–µ–∫—É–Ω–¥ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç",
            "üìä –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞: —Å–æ—Ç–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ",
            "üéØ –í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å: 90%+ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è",
            "üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: Paperless-NGX, 1C ERP, –æ–±–ª–∞—á–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞",
            "üéì –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π: –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥ –≤–∞—à–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã"
        ]
        
        for feature in features:
            label = QLabel(feature)
            label.setStyleSheet("padding: 5px; font-size: 12px;")
            features_layout.addWidget(label)
        
        features_group.setLayout(features_layout)
        layout.addWidget(features_group)
        
        # –†–∞—Å—Ç—è–≥–∏–≤–∞–µ–º
        layout.addStretch()
        
        # –ß–µ–∫–±–æ–∫—Å "–ë–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å"
        skip_checkbox = QCheckBox("–ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –º–∞—Å—Ç–µ—Ä –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ")
        skip_checkbox.setStyleSheet("font-size: 11px; color: #7f8c8d; margin-top: 20px;")
        layout.addWidget(skip_checkbox)


class WorkspaceSelectionPage(QWizardPage):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setTitle("–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã")
        self.setSubTitle("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å, –Ω–∞–∏–±–æ–ª–µ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –≤–∞—à–∏–º –∑–∞–¥–∞—á–∞–º")
        
        layout = QVBoxLayout(self)
        layout.setSpacing(15)
        
        # –ì—Ä—É–ø–ø–∞ —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫
        self.mode_group = QButtonGroup(self)
        
        # –†–µ–∂–∏–º 1: –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è
        accounting_widget = self._create_mode_card(
            "üè¢ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è",
            "–§–æ–∫—É—Å –Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
            [
                "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π",
                "‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel –¥–ª—è 1C",
                "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å—É–º–º –∏ –ù–î–°",
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ LayoutLMv3 –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏"
            ],
            "accountant"
        )
        layout.addWidget(accounting_widget)
        
        # –†–µ–∂–∏–º 2: –ú–∞—Å—Å–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
        batch_widget = self._create_mode_card(
            "üì¶ –ú–∞—Å—Å–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞",
            "–§–æ–∫—É—Å –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
            [
                "‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±—ã—Å—Ç—Ä–æ–≥–æ Gemini API",
                "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–æ—Ä—Ç –≤ JSON",
                "‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏"
            ],
            "batch"
        )
        layout.addWidget(batch_widget)
        
        # –†–µ–∂–∏–º 3: –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π
        universal_widget = self._create_mode_card(
            "üî¨ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π",
            "–í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
            [
                "‚Ä¢ –î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–æ–¥–µ–ª—è–º –∏ —Ñ—É–Ω–∫—Ü–∏—è–º",
                "‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π",
                "‚Ä¢ –û–±—É—á–µ–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π",
                "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–∏–±–∫–æ—Å—Ç—å"
            ],
            "universal"
        )
        layout.addWidget(universal_widget)
        
        layout.addStretch()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
        # PyQt6 —Ç—Ä–µ–±—É–µ—Ç pyqtSignal, –∞ –Ω–µ —Å—Ç—Ä–æ–∫—É
        self.registerField('workspace_mode', self, 'selected_mode', self.modeChanged)
        self.selected_mode = 'accountant'
        
    modeChanged = pyqtSignal()
    
    def _create_mode_card(self, title, subtitle, features, mode_id):
        """–°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É —Ä–µ–∂–∏–º–∞"""
        card = QGroupBox()
        card_layout = QVBoxLayout()
        
        # –†–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        radio = QRadioButton(title)
        radio.setStyleSheet("font-size: 14px; font-weight: 600;")
        if mode_id == 'accountant':
            radio.setChecked(True)
        
        radio.toggled.connect(lambda checked: self._on_mode_selected(mode_id) if checked else None)
        self.mode_group.addButton(radio)
        card_layout.addWidget(radio)
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle_label = QLabel(subtitle)
        subtitle_label.setStyleSheet("font-size: 11px; color: #7f8c8d; margin-left: 25px;")
        card_layout.addWidget(subtitle_label)
        
        # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
        for feature in features:
            feature_label = QLabel(feature)
            feature_label.setStyleSheet("font-size: 11px; margin-left: 25px; padding: 2px;")
            card_layout.addWidget(feature_label)
        
        card.setLayout(card_layout)
        return card
    
    def _on_mode_selected(self, mode_id):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞"""
        self.selected_mode = mode_id
        self.modeChanged.emit()


class ModelSetupPage(QWizardPage):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–µ–π"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setTitle("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ AI-–º–æ–¥–µ–ª–µ–π")
        self.setSubTitle("–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ –º–æ–¥–µ–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å")
        
        layout = QVBoxLayout(self)
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ GPU
        import torch
        gpu_available = torch.cuda.is_available()
        
        if gpu_available:
            gpu_info = QLabel(
                f"‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω GPU: {torch.cuda.get_device_name(0)}\n"
                f"–î–æ—Å—Ç—É–ø–Ω–æ –ø–∞–º—è—Ç–∏: {torch.cuda.get_device_properties(0).total_memory / 1024**3:.1f} GB"
            )
            gpu_info.setStyleSheet(
                "background-color: #d4edda; color: #155724; padding: 12px; "
                "border-radius: 6px; border: 1px solid #c3e6cb;"
            )
        else:
            gpu_info = QLabel(
                "‚ÑπÔ∏è GPU –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±–ª–∞—á–Ω—ã–µ –º–æ–¥–µ–ª–∏ (Gemini) "
                "–¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏."
            )
            gpu_info.setStyleSheet(
                "background-color: #d1ecf1; color: #0c5460; padding: 12px; "
                "border-radius: 6px; border: 1px solid #bee5eb;"
            )
        
        gpu_info.setWordWrap(True)
        layout.addWidget(gpu_info)
        
        layout.addSpacing(15)
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
        recommendation_group = QGroupBox("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
        rec_layout = QVBoxLayout()
        
        if gpu_available:
            rec_text = (
                "–£ –≤–∞—Å –µ—Å—Ç—å GPU, –ø–æ—ç—Ç–æ–º—É –º—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º:\n\n"
                "‚Ä¢ LayoutLMv3 - –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏ (–ª–æ–∫–∞–ª—å–Ω–æ)\n"
                "‚Ä¢ Google Gemini - –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–æ–±–ª–∞–∫–æ)\n\n"
                "–≠—Ç–æ –¥–∞—Å—Ç –≤–∞–º –ª—É—á—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —Ç–æ—á–Ω–æ—Å—Ç–∏."
            )
        else:
            rec_text = (
                "–ë–µ–∑ GPU —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n\n"
                "‚Ä¢ Google Gemini - –±—ã—Å—Ç—Ä–∞—è –æ–±–ª–∞—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\n"
                "‚Ä¢ Donut - –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞ (–º–µ–¥–ª–µ–Ω–Ω–µ–µ)\n\n"
                "–õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ CPU (–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ)."
            )
        
        rec_label = QLabel(rec_text)
        rec_label.setWordWrap(True)
        rec_label.setStyleSheet("font-size: 12px;")
        rec_layout.addWidget(rec_label)
        
        recommendation_group.setLayout(rec_layout)
        layout.addWidget(recommendation_group)
        
        layout.addSpacing(10)
        
        # –û–ø—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π
        models_group = QGroupBox("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª–∏")
        models_layout = QVBoxLayout()
        
        self.layoutlm_check = QCheckBox("üéØ LayoutLMv3 - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å (—Ç—Ä–µ–±—É–µ—Ç ~2GB)")
        self.layoutlm_check.setChecked(gpu_available)
        models_layout.addWidget(self.layoutlm_check)
        
        self.donut_check = QCheckBox("üç© Donut - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å (—Ç—Ä–µ–±—É–µ—Ç ~1.5GB)")
        self.donut_check.setChecked(False)
        models_layout.addWidget(self.donut_check)
        
        self.gemini_check = QCheckBox("üíé Google Gemini - –û–±–ª–∞—á–Ω–∞—è –º–æ–¥–µ–ª—å (—Ç—Ä–µ–±—É–µ—Ç API –∫–ª—é—á)")
        self.gemini_check.setChecked(True)
        models_layout.addWidget(self.gemini_check)
        
        models_group.setLayout(models_layout)
        layout.addWidget(models_group)
        
        layout.addSpacing(10)
        
        # –û–ø—Ü–∏—è –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
        self.autodownload_check = QCheckBox("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ —Å–µ–π—á–∞—Å")
        self.autodownload_check.setChecked(False)
        self.autodownload_check.setToolTip(
            "–ï—Å–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ, –º–æ–¥–µ–ª–∏ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏"
        )
        layout.addWidget(self.autodownload_check)
        
        layout.addStretch()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—è
        self.registerField('gpu_enabled', self.layoutlm_check)
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ –¥–ª—è model_preference
        self.preferred_model = 'gemini' if not gpu_available else 'layoutlm'
        
    
    def validatePage(self):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º"""
        if not (self.layoutlm_check.isChecked() or 
                self.donut_check.isChecked() or 
                self.gemini_check.isChecked()):
            from PyQt6.QtWidgets import QMessageBox
            QMessageBox.warning(
                self,
                "–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏",
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –º–æ–¥–µ–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã."
            )
            return False
        
        return True


class APIKeysPage(QWizardPage):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–µ–π"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setTitle("API –∫–ª—é—á–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
        self.setSubTitle("–ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏ –¥–ª—è –æ–±–ª–∞—á–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤")
        
        layout = QVBoxLayout(self)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        info = QLabel(
            "API –∫–ª—é—á–∏ —Ç—Ä–µ–±—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±–ª–∞—á–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π. "
            "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥ –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏—Ö –ø–æ–∑–∂–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö."
        )
        info.setWordWrap(True)
        info.setStyleSheet("font-size: 11px; color: #7f8c8d; padding: 10px;")
        layout.addWidget(info)
        
        # Google Gemini
        gemini_group = QGroupBox("üíé Google Gemini API")
        gemini_layout = QVBoxLayout()
        
        gemini_desc = QLabel(
            "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Google Gemini –Ω–µ–æ–±—Ö–æ–¥–∏–º API –∫–ª—é—á.\n"
            "–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –º–æ–∂–Ω–æ –Ω–∞: https://makersuite.google.com/app/apikey"
        )
        gemini_desc.setWordWrap(True)
        gemini_desc.setStyleSheet("font-size: 11px; margin-bottom: 10px;")
        gemini_layout.addWidget(gemini_desc)
        
        self.gemini_key_input = QLineEdit()
        self.gemini_key_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ Google API –∫–ª—é—á...")
        self.gemini_key_input.setEchoMode(QLineEdit.EchoMode.Password)
        gemini_layout.addWidget(self.gemini_key_input)
        
        show_key_btn = QPushButton("üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å")
        show_key_btn.setMaximumWidth(100)
        show_key_btn.clicked.connect(self._toggle_key_visibility)
        gemini_layout.addWidget(show_key_btn)
        
        test_gemini_btn = QPushButton("üß™ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
        test_gemini_btn.clicked.connect(self._test_gemini_connection)
        gemini_layout.addWidget(test_gemini_btn)
        
        gemini_group.setLayout(gemini_layout)
        layout.addWidget(gemini_group)
        
        layout.addSpacing(10)
        
        # –î—Ä—É–≥–∏–µ API (—Å–∫—Ä—ã—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        self.other_apis_check = QCheckBox("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥—Ä—É–≥–∏–µ API (OpenAI, Anthropic, etc.)")
        self.other_apis_check.setStyleSheet("font-size: 11px;")
        layout.addWidget(self.other_apis_check)
        
        layout.addStretch()
        
        # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
        skip_label = QLabel("–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å API –∫–ª—é—á–∏ –ø–æ–∑–∂–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí LLM –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã")
        skip_label.setStyleSheet("font-size: 10px; color: #95a5a6; font-style: italic;")
        skip_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(skip_label)
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—è
        self.key_is_set = False
        # self.registerField('gemini_key_set', self)  # –£–ø—Ä–æ—Å—Ç–∏–º - –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —ç—Ç–æ –ø–æ–ª–µ
    
    def _toggle_key_visibility(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–ª—é—á–∞"""
        if self.gemini_key_input.echoMode() == QLineEdit.EchoMode.Password:
            self.gemini_key_input.setEchoMode(QLineEdit.EchoMode.Normal)
            self.sender().setText("üîí –°–∫—Ä—ã—Ç—å")
        else:
            self.gemini_key_input.setEchoMode(QLineEdit.EchoMode.Password)
            self.sender().setText("üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å")
    
    def _test_gemini_connection(self):
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Gemini"""
        api_key = self.gemini_key_input.text().strip()
        
        if not api_key:
            from PyQt6.QtWidgets import QMessageBox
            QMessageBox.warning(self, "API –∫–ª—é—á", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á.")
            return
        
        # TODO: –†–µ–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        from PyQt6.QtWidgets import QMessageBox
        try:
            import google.generativeai as genai
            genai.configure(api_key=api_key)
            model = genai.GenerativeModel('gemini-2.0-flash-exp')
            response = model.generate_content("Test")
            
            if response:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á
                from config.secrets import SecretsManager
                secrets = SecretsManager()
                secrets.set_secret('google_api_key', api_key)
                
                self.key_is_set = True
                
                QMessageBox.information(
                    self,
                    "–£—Å–ø–µ—Ö",
                    "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Gemini —É—Å–ø–µ—à–Ω–æ!\nAPI –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω."
                )
            else:
                QMessageBox.warning(
                    self,
                    "–û—à–∏–±–∫–∞",
                    "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á."
                )
        except Exception as e:
            QMessageBox.warning(
                self,
                "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è",
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API –∫–ª—é—á–∞:\n{str(e)}"
            )


class CompletionPage(QWizardPage):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setTitle("üéä –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!")
        self.setSubTitle("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        layout = QVBoxLayout(self)
        layout.setSpacing(20)
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        completion_msg = QLabel(
            "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! InvoiceGemini –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.\n\n"
            "–°–µ–π—á–∞—Å –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n"
            "  ‚úì  –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç\n"
            "  ‚úì  –ò–∑—É—á–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –ø–æ–º–æ—â—å—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç—É—Ä–∞\n"
            "  ‚úì  –ü—Ä–æ—á–∏—Ç–∞—Ç—å –∫—Ä–∞—Ç–∫–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ\n\n"
            "–ù–∞–∂–º–∏—Ç–µ '–ì–æ—Ç–æ–≤–æ' —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!"
        )
        completion_msg.setWordWrap(True)
        completion_msg.setStyleSheet("font-size: 12px; line-height: 1.6;")
        layout.addWidget(completion_msg)
        
        # –û–ø—Ü–∏–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        options_group = QGroupBox("–ß—Ç–æ –¥–∞–ª—å—à–µ?")
        options_layout = QVBoxLayout()
        
        self.show_tour_check = QCheckBox("üéì –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ç—É—Ä –ø–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
        self.show_tour_check.setChecked(True)
        options_layout.addWidget(self.show_tour_check)
        
        self.load_sample_check = QCheckBox("üìÑ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–±–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        self.load_sample_check.setChecked(True)
        options_layout.addWidget(self.load_sample_check)
        
        self.open_docs_check = QCheckBox("üìö –û—Ç–∫—Ä—ã—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        self.open_docs_check.setChecked(False)
        options_layout.addWidget(self.open_docs_check)
        
        options_group.setLayout(options_layout)
        layout.addWidget(options_group)
        
        layout.addSpacing(20)
        
        # –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏
        links_group = QGroupBox("üìå –ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã")
        links_layout = QVBoxLayout()
        
        links = [
            ("üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", "docs/README.md"),
            ("üí¨ GitHub Discussions", "https://github.com/yourusername/InvoiceGemini/discussions"),
            ("üêõ –°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ", "https://github.com/yourusername/InvoiceGemini/issues"),
            ("‚≠ê –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç", "https://github.com/yourusername/InvoiceGemini"),
        ]
        
        for title, link in links:
            link_label = QLabel(f'<a href="{link}" style="text-decoration: none;">{title}</a>')
            link_label.setOpenExternalLinks(True)
            link_label.setStyleSheet("padding: 5px;")
            links_layout.addWidget(link_label)
        
        links_group.setLayout(links_layout)
        layout.addWidget(links_group)
        
        layout.addStretch()
        
        # –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
        thanks = QLabel(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä InvoiceGemini! üôè\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –º—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å."
        )
        thanks.setAlignment(Qt.AlignmentFlag.AlignCenter)
        thanks.setStyleSheet("font-size: 11px; color: #7f8c8d; font-style: italic; margin-top: 20px;")
        layout.addWidget(thanks)

